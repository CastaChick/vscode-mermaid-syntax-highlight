- comment: State Diagram
  begin: \b(stateDiagram)
  beginCaptures:
    '1':
      name: keyword.control.mermaid
  patterns:
  - match: \%%.*
    name: comment
  - comment: '(state)'
    match: ^\s*([\w-]+)$
    name: variable
  - comment: '(state) : (description)'
    match: !regex |-
      ([\w-]+) # state name
      \s+(:) # :
      \s+(\s*[-\w\s]+\b) # description
    captures:
      '1':
        name: variable
      '2':
        name: keyword.control.mermaid
      '3':
        name: string
  - comment: 'state "(description)" as (state)'
    match: !regex |-
      (state) # state
      \s+("[-\w\s]+\b") # description
      \s+(as) # as
      \s+([\w-]+) # state name
    captures:
      '1':
        name: keyword.control.mermaid
      '2':
        name: string
      '3':
        name: keyword.control.mermaid
      '4':
        name: variable
  - comment: '(state) --> (state) (:)? (transition text)?'
    begin: !regex |-
      ([\w-]+) # state name
      \s+(-->) # -->
    beginCaptures:
      '1':
        name: variable
      '2':
        name: keyword.control.mermaid
    patterns:
    - comment: '(state)'
      match: !regex |-
        \s+([\w-]+) # state name
      captures:
        '1':
          name: variable
    - comment: '[*]'
      match: (\[\*\])
      name: keyword.control.mermaid
    end: !regex |-
        \s*(:)? # :
        \s*(\s*[-\w\s]+\b)? # transition text
        $ # end
    endCaptures:
      '1':
        name: keyword.control.mermaid
      '2':
        name: string
  - comment: '[*] --> (state) (:)? (transition text)?'
    match: !regex |-
      (\[\*\]) # [*]
      \s+(-->) # -->
      \s+([\w-]+) # state name
      \s*(:)? # :
      \s*(\s*[-\w\s]+\b)? # transition text
    captures:
      '1':
        name: keyword.control.mermaid
      '2':
        name: keyword.control.mermaid
      '3':
        name: variable
      '4':
        name: keyword.control.mermaid
      '5':
        name: string
  end: (^|\G)(?=\s*[`~]{3,}\s*$)
